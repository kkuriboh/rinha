(STD.if (STD.bool 1) then       _) = (then ())
(STD.if (STD.bool 0) _ otherwhise) = (otherwhise ())
(STD.call (STD.closure f)) = (f)
(STD.first  (Pair f _)) = (f)
(STD.second (Pair _ s)) = (s)
(STD.print               x) = (Apps.HVM.print x x)
(STD.print (STD.closure f)) = (Apps.HVM.print "<#closure>" f)
(STD.String.concat Data.String.nil         ys) = ys
(STD.String.concat (Data.String.cons x xs) ys) = (Data.String.cons x (STD.String.concat xs ys))
(STD.eq (Data.String.cons _ _)          Data.String.nil) = (STD.bool 0)
(STD.eq Data.String.nil          (Data.String.cons _ _)) = (STD.bool 0)
(STD.eq Data.String.nil                 Data.String.nil) = (STD.bool 1)
(STD.eq (Data.String.cons x xs) (Data.String.cons y ys)) = (STD.bool (STD.and (STD.eq x y) (STD.eq xs ys)))
(STD.eq (STD.int x) (STD.int y))    = (STD.bool (== x y))
(STD.neq x y)                       = (STD.xor (STD.eq x y) (STD.bool 1))
(STD.eq (STD.bool x) (STD.bool y))  = (STD.bool (== x y))
(STD.xor (STD.bool x) (STD.bool y)) = (STD.bool (^ x y))
(STD.or (STD.bool x) (STD.bool y))  = (STD.bool (| x y))
(STD.and (STD.bool x) (STD.bool y)) = (STD.bool (& x y))
(STD.lt (STD.int x) (STD.int y))    = (STD.bool (< x y))
(STD.lte (STD.int x) (STD.int y))   = (STD.bool (<= x y))
(STD.gt (STD.int x) (STD.int y))    = (STD.bool (> x y))
(STD.gte (STD.int x) (STD.int y))   = (STD.bool (>= x y))
(STD.or (STD.int x) (STD.int y))    = (STD.int (| x y))
(STD.and (STD.int x) (STD.int y))   = (STD.int (& x y))
(STD.rem (STD.int x) (STD.int y))   = (STD.int (% x y))
(STD.div (STD.int x) (STD.int y))   = (STD.int (/ x y))
(STD.mul (STD.int x) (STD.int y))   = (STD.int (* x y))
(STD.add (STD.int x) (STD.int y))   = (STD.int (+ x y))
(STD.add Data.String.nil y)         = y
(STD.add x Data.String.nil)         = x
(STD.add (Data.String.cons x xs)
         (Data.String.cons y ys))   = (STD.String.concat (Data.String.cons x xs) (Data.String.cons y ys))
(STD.sub (STD.int x) (STD.int y))   = (STD.int (- x y))
